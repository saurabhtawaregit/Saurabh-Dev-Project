# Unique name for this workflow
name: Deploy integration branch changes to integration and staging/uat orgs

# Definition when the workflow should run
on:
  push:
    branches: [ integration ]
    paths:
      - 'force-app/**'

# Jobs to be executed
jobs:
  deploy-changes-to-int-and-staging-orgs:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # Install Salesforce CLI
      - name: 'Install Salesforce CLI'
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sf/channels/stable/sf-linux-x64.tar.xz
          mkdir ~/sf
          tar xJf sf-linux-x64.tar.xz -C ~/sf --strip-components 1
          echo "$HOME/sf/bin" >> $GITHUB_PATH
          ~/sf/bin/sfdx version

      # Install sfdx-git-delta plugin
      - name: 'Installing sfdx git delta'
        run: | 
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins

      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Store the SFDX URL secret for integration org
      - name: 'Populate auth file with SFDX_URL secret for the integration org'
        shell: bash
        run: |
          echo ${{ secrets.SFDX_INTEGRATION_URL }} > ./SFDX_INTEGRATION_URL.txt

      # Create delta packages for changes
      - name: 'Create delta packages for new, modified, or deleted metadata'
        run: |
          mkdir changed-sources
          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

      # Authenticate to Integration Org
      - name: 'Authenticate to Integration Org'
        run: sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -s -a integration

      # Deploy only changed metadata to Integration org
      - name: 'Deploy changed metadata to Integration org'
        run: |
          sf deploy metadata \
            --source-dir "changed-sources/package" \
            --test-level RunLocalTests \
            --json

      # Deploy destructive changes (if any) to Integration org
      - name: 'Deploy destructive changes (if any) to Integration org'
        if: ${{ always() }}
        run: |
          sf deploy metadata \
            --metadata-dir "changed-sources/destructiveChanges" \
            --ignore-errors

      # Store the SFDX URL secret for staging org
      # Uncomment the following lines if deploying to Staging/UAT is needed
      # - name: 'Populate auth file with SFDX_URL secret for the staging org'
      #   shell: bash
      #   run: |
      #     echo #$#{{ secrets.SFDX_STAGING_URL }} > ./SFDX_STAGING_URL.txt

      # Authenticate to Staging Org
      # - name: 'Authenticate to Staging Org'
      #   run: sfdx auth:sfdxurl:store -f ./SFDX_STAGING_URL.txt -s -a staging

      # Deploy only changed metadata to Staging org
      # - name: 'Deploy changed metadata to Staging org'
      #   run: |
      #     sf deploy metadata \
      #       --source-dir "changed-sources/package" \
      #       --test-level RunLocalTests \
      #       --json

      # Deploy destructive changes (if any) to Staging org
      # - name: 'Deploy destructive changes (if any) to Staging org'
      #   run: |
      #     sf deploy metadata \
      #       --metadata-dir "changed-sources/destructiveChanges" \
      #       --ignore-errors
